# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\IG7.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets, QtMultimedia, QtMultimediaWidgets
from PyQt5.QtWidgets import QMessageBox
from Clases.Practica import Practica
from Clases.Senas import Senas
import IG6 as G6


class Ui_IG7_test(object):
	def setupUi(self, IG7_test):
		IG7_test.setObjectName("IG7_test")
		IG7_test.setMaximumSize(QtCore.QSize(1134, 611))
		IG7_test.setMinimumSize(QtCore.QSize(1134, 611))
		IG7_test.setStyleSheet("QWidget{\n"
"background-color: rgb(250, 215, 160);\n"
"}\n"
"")
		self.boton_siguiente = QtWidgets.QPushButton(IG7_test)
		self.boton_siguiente.setGeometry(QtCore.QRect(470, 560, 151, 31))
		self.boton_siguiente.setStyleSheet("QPushButton{\n"
"color: rgb(255, 255, 255);\n"
"    background-color: rgb(156, 100, 12);\n"
"    font: 12pt \"Segoe Print\";\n"
"    border-radius: 11px;\n"
"    border:none;\n"
"    border-left: 1px solid rgb(156, 100, 12);\n"
"    border-right: 1px solid rgb(156, 100, 12);\n"
"    border-bottom: 3px solid rgb(156, 100, 12);\n"
"}\n"
"QPushButton:hover{\n"
"    background-color: rgb(248, 196, 113);\n"
"    border-left: 1px solid rgb(248, 196, 113);\n"
"    border-right: 1px solid rgb(248, 196, 113);\n"
"    border-bottom: 3px solid rgb(248, 196, 113);\n"
"}\n"
"QPushButton:pressed{\n"
"    background-color: rgb(120, 66, 18);\n"
"    border-left: 1px solid  rgb(120, 66, 18);\n"
"    border-right: 1px solid  rgb(120, 66, 18);\n"
"    border-top: 3px solid  rgb(120, 66, 18);\n"
"    border-bottom: none;\n"
"}")
		self.boton_siguiente.setObjectName("boton_siguiente")
		self.boton_opcion2_t1 = QtWidgets.QPushButton(IG7_test)
		self.boton_opcion2_t1.setGeometry(QtCore.QRect(800, 90, 245, 441))
		self.boton_opcion2_t1.setText("")
		self.boton_opcion2_t1.setObjectName("boton_opcion2_t1")
		self.boton_opcion1_t1 = QtWidgets.QPushButton(IG7_test)
		self.boton_opcion1_t1.setGeometry(QtCore.QRect(430, 90, 245, 441))
		self.boton_opcion1_t1.setText("")
		self.boton_opcion1_t1.setObjectName("boton_opcion1_t1")
		self.boton_opcion0_t1 = QtWidgets.QPushButton(IG7_test)
		self.boton_opcion0_t1.setGeometry(QtCore.QRect(60, 90, 245, 441))
		self.boton_opcion0_t1.setText("")
		self.boton_opcion0_t1.setObjectName("boton_opcion0_t1")
		self.label_instruccion = QtWidgets.QLabel(IG7_test)
		self.label_instruccion.setGeometry(QtCore.QRect(30, 30, 1071, 31))
		self.label_instruccion.setStyleSheet("font: 16pt \"Segoe Print\";\n"
"background-color: rgb(250, 215, 160);\n"
"color: rgb(156, 100, 12);\n"
"qproperty-alignment: AlignCenter;")
		self.label_instruccion.setObjectName("label_instruccion")
		self.widgetVideoTutorial = QtWidgets.QWidget(IG7_test)
		self.widgetVideoTutorial.setGeometry(QtCore.QRect(130, 90, 301, 441))
		self.widgetVideoTutorial.setObjectName("widgetVideoTutorial")
		self.boton_opcion1_t2 = QtWidgets.QPushButton(IG7_test)
		self.boton_opcion1_t2.setGeometry(QtCore.QRect(820, 220, 219, 31))
		self.boton_opcion1_t2.setStyleSheet("QPushButton{\n"
"color: rgb(255, 255, 255);\n"
"    background-color: rgb(156, 100, 12);\n"
"    font: 12pt \"Segoe Print\";\n"
"    border-radius: 11px;\n"
"    border:none;\n"
"    border-left: 1px solid rgb(156, 100, 12);\n"
"    border-right: 1px solid rgb(156, 100, 12);\n"
"    border-bottom: 3px solid rgb(156, 100, 12);\n"
"}\n"
"QPushButton:hover{\n"
"    background-color: rgb(248, 196, 113);\n"
"    border-left: 1px solid rgb(248, 196, 113);\n"
"    border-right: 1px solid rgb(248, 196, 113);\n"
"    border-bottom: 3px solid rgb(248, 196, 113);\n"
"}\n"
"QPushButton:pressed{\n"
"    background-color: rgb(120, 66, 18);\n"
"    border-left: 1px solid  rgb(120, 66, 18);\n"
"    border-right: 1px solid  rgb(120, 66, 18);\n"
"    border-top: 3px solid  rgb(120, 66, 18);\n"
"    border-bottom: none;\n"
"}")
		self.boton_opcion1_t2.setObjectName("boton_opcion1_t2")
		self.boton_opcion2_t2 = QtWidgets.QPushButton(IG7_test)
		self.boton_opcion2_t2.setGeometry(QtCore.QRect(660, 350, 219, 31))
		self.boton_opcion2_t2.setStyleSheet("QPushButton{\n"
"color: rgb(255, 255, 255);\n"
"    background-color: rgb(156, 100, 12);\n"
"    font: 12pt \"Segoe Print\";\n"
"    border-radius: 11px;\n"
"    border:none;\n"
"    border-left: 1px solid rgb(156, 100, 12);\n"
"    border-right: 1px solid rgb(156, 100, 12);\n"
"    border-bottom: 3px solid rgb(156, 100, 12);\n"
"}\n"
"QPushButton:hover{\n"
"    background-color: rgb(248, 196, 113);\n"
"    border-left: 1px solid rgb(248, 196, 113);\n"
"    border-right: 1px solid rgb(248, 196, 113);\n"
"    border-bottom: 3px solid rgb(248, 196, 113);\n"
"}\n"
"QPushButton:pressed{\n"
"    background-color: rgb(120, 66, 18);\n"
"    border-left: 1px solid  rgb(120, 66, 18);\n"
"    border-right: 1px solid  rgb(120, 66, 18);\n"
"    border-top: 3px solid  rgb(120, 66, 18);\n"
"    border-bottom: none;\n"
"}")
		self.boton_opcion2_t2.setObjectName("boton_opcion2_t2")
		self.boton_opcion0_t2 = QtWidgets.QPushButton(IG7_test)
		self.boton_opcion0_t2.setGeometry(QtCore.QRect(520, 220, 219, 31))
		self.boton_opcion0_t2.setStyleSheet("QPushButton{\n"
"color: rgb(255, 255, 255);\n"
"    background-color: rgb(156, 100, 12);\n"
"    font: 12pt \"Segoe Print\";\n"
"    border-radius: 11px;\n"
"    border:none;\n"
"    border-left: 1px solid rgb(156, 100, 12);\n"
"    border-right: 1px solid rgb(156, 100, 12);\n"
"    border-bottom: 3px solid rgb(156, 100, 12);\n"
"}\n"
"QPushButton:hover{\n"
"    background-color: rgb(248, 196, 113);\n"
"    border-left: 1px solid rgb(248, 196, 113);\n"
"    border-right: 1px solid rgb(248, 196, 113);\n"
"    border-bottom: 3px solid rgb(248, 196, 113);\n"
"}\n"
"QPushButton:pressed{\n"
"    background-color: rgb(120, 66, 18);\n"
"    border-left: 1px solid  rgb(120, 66, 18);\n"
"    border-right: 1px solid  rgb(120, 66, 18);\n"
"    border-top: 3px solid  rgb(120, 66, 18);\n"
"    border-bottom: none;\n"
"}")
		self.boton_opcion0_t2.setObjectName("boton_opcion0_t2")

		#----------------#

		self.eventos(IG7_test)

		#setupVideo
		self.video = self.crearVideo(IG7_test)

		self.botones_opciones_t1 = [self.boton_opcion0_t1,self.boton_opcion1_t1,self.boton_opcion2_t1]
		self.botones_opciones_t2 = [self.boton_opcion0_t2,self.boton_opcion1_t2,self.boton_opcion2_t2]

		self.ocultarBotones()
		self.init()

		self.vistaRespuestas = 0
		self.opcionActiva = -1
		self.numPregunta = 0
		self.getPathMultimedia()
		self.mostrarPregunta(IG7_test)

		#----------------#
		self.retranslateUi(IG7_test)
		QtCore.QMetaObject.connectSlotsByName(IG7_test)

	def retranslateUi(self, IG7_test):
		_translate = QtCore.QCoreApplication.translate
		IG7_test.setWindowTitle(_translate("IG7_test", "Cuestionario"))
		self.boton_siguiente.setText(_translate("IG7_test", "Siguiente"))

	def eventos(self,IG7_Test):
		self.boton_opcion0_t1.clicked.connect(lambda: self.seleccionarOpcion_t1(0))
		self.boton_opcion1_t1.clicked.connect(lambda: self.seleccionarOpcion_t1(1))
		self.boton_opcion2_t1.clicked.connect(lambda: self.seleccionarOpcion_t1(2))
		self.boton_opcion0_t2.clicked.connect(lambda: self.seleccionarOpcion_t2(0))
		self.boton_opcion1_t2.clicked.connect(lambda: self.seleccionarOpcion_t2(1))
		self.boton_opcion2_t2.clicked.connect(lambda: self.seleccionarOpcion_t2(2))
		self.boton_siguiente.clicked.connect(lambda: self.siguiente(IG7_Test))

	def setIDUsuario(self,id):
		self.id_usuario = id

	def setCuestionario(self,test):
		self.cuestionario = test

	def ocultarBotones(self):
		self.widgetVideoTutorial.setVisible(False)
		for i in range(3):
			self.botones_opciones_t1[i].setVisible(False)
			self.botones_opciones_t2[i].setVisible(False)

	def init(self):
		# Botones T1
		style = '''
			QPushButton{
				border: none;
				border-radius: 5px;
			}
			QPushButton:hover{
				border: 3px solid rgb(156, 100, 12);
			}
		'''
		for i in range(3):
			self.botones_opciones_t1[i].setStyleSheet(style)

		# Botones T2
		style = '''
			QPushButton{
				 color: rgb(255, 255, 255);
			    background-color: rgb(156, 100, 12);
			    font: 12pt \"Segoe Print\";
			    border-radius: 11px;
			    border:none;
			    border-left: 1px solid rgb(156, 100, 12);
			    border-right: 1px solid rgb(156, 100, 12);
			    border-bottom: 3px solid rgb(156, 100, 12);
			}
			QPushButton:hover{
			    background-color: rgb(248, 196, 113);
			    border-left: 1px solid rgb(248, 196, 113);
			    border-right: 1px solid rgb(248, 196, 113);
			    border-bottom: 3px solid rgb(248, 196, 113);
			}
		'''
		for i in range(3):
			self.botones_opciones_t2[i].setStyleSheet(style)
		self.opcionActiva = -1

	def mostrarPregunta(self,IG7_Test):
		if self.cuestionario.preguntas[self.numPregunta][0].tipo_sena == 0:	# Seña estatica
			sena = self.cuestionario.solucion[self.numPregunta]
			self.label_instruccion.setText("Selecciona la imagen correspondiente a la seña: " + sena.nombre_sena)
			for i in range(3):
				self.botones_opciones_t1[i].setVisible(True)
				self.imagenBoton(self.numPregunta)
		else: 															# Seña dinámica
			self.label_instruccion.setText("¿A cuál seña corresponde el video?")
			for i in range(3):
				self.botones_opciones_t2[i].setVisible(True)
			self.textoBotones()
			self.widgetVideoTutorial.setVisible(True)
			self.setupVideo(IG7_Test)

	def siguiente(self,IG7_Test):
		if self.numPregunta < self.cuestionario.MAXPREGUNTAS:
			if self.opcionActiva == -1:
				print("Seleccione una opción primero")
			else:
				sena = self.cuestionario.preguntas[self.numPregunta][self.opcionActiva]
				self.cuestionario.agregarRespuesta(sena)
				# print(self.cuestionario.respuestas)
				self.numPregunta += 1
				if not self.numPregunta == self.cuestionario.MAXPREGUNTAS:
					self.init()
					self.ocultarBotones()
					self.mostrarPregunta(IG7_Test)
				else:
					# print(self.cuestionario.solucion)
					# print(self.cuestionario.respuestas)
					# print(self.cuestionario.verResultado())
					self.ventanaResultados(IG7_Test)

	def getPathMultimedia(self):
		self.pathMult = "videos/"
		if self.cuestionario.id_categoria == 1:
			self.pathMult += "abecedario/"
		if self.cuestionario.id_categoria == 2:
			self.pathMult += "numeros/"
		if self.cuestionario.id_categoria == 3:
			self.pathMult += "cuerpo/"
		if self.cuestionario.id_categoria == 4:
			self.pathMult += "dias/"
		if self.cuestionario.id_categoria == 5:
			self.pathMult += "colores/"

	# Vista señas estáticas
	def imagenBoton(self,indice):
		for i in range(3):
			sena = self.cuestionario.preguntas[indice][i]
			pixmap = QtGui.QPixmap(self.pathMult + f"{str(sena.nombre_sena)}.png")
			icon = QtGui.QIcon(pixmap)
			self.botones_opciones_t1[i].setIcon(icon)
			self.botones_opciones_t1[i].setIconSize(QtCore.QSize(300,435))

	def seleccionarOpcion_t1(self,opcion):
		style = '''
			QPushButton{
				border-radius: 5px;
				border: 3px solid  rgb(80,45,12);
			}
		'''
		self.init()
		self.opcionActiva = opcion
		self.botones_opciones_t1[opcion].setStyleSheet(style)
		# print(self.opcionActiva)

	# Vista señas dinámicas
	def textoBotones(self):
		for i in range(3):
			if self.vistaRespuestas == 1:
				style = '''
					QPushButton{
						background-color: rgb(19,207,73);
						color: rgb(255, 255, 255);
						font: 12pt \"Segoe Print\";
						border-radius: 11px;
						border:none;
						border-left: 1px solid rgb(18,151,56);;
						border-right: 1px solid rgb(18,151,56);
						border-bottom: 3px solid rgb(18,151,56);
					}
				'''
				self.botones_opciones_t2[i].setStyleSheet(style)
			sena = self.cuestionario.preguntas[self.numPregunta][i]
			self.botones_opciones_t2[i].setText(sena.nombre_sena.upper())

	def setupVideo(self, Form):
		sena = self.cuestionario.solucion[self.numPregunta]
		self.pathVideo = self.pathMult + f"{sena.nombre_sena.upper()}.wmv"
		self.video.show()
		self.contenedor = self.crearContenedor(Form)
		# self.contenedor.setMedia(QtMultimedia.QMediaContent(QtCore.QUrl(self.path)))
		self.playlist = QtMultimedia.QMediaPlaylist()
		self.playlist.setPlaybackMode(QtMultimedia.QMediaPlaylist.Loop)
		self.playlist.addMedia(QtMultimedia.QMediaContent(QtCore.QUrl(self.pathVideo)))
		self.contenedor.setPlaylist(self.playlist)
		self.contenedor.play()

	def crearContenedor(self, Form):
		contenedor = QtMultimedia.QMediaPlayer(Form)
		contenedor.setVideoOutput(self.video)
		return contenedor

	def crearVideo(self, Form):
		videoOutput = QtMultimediaWidgets.QVideoWidget(Form)
		caja = QtWidgets.QVBoxLayout()
		caja.addWidget(videoOutput)
		self.widgetVideoTutorial.setLayout(caja)
		return videoOutput

	def seleccionarOpcion_t2(self,opcion):
		style = '''
			QPushButton{
				background-color: rgb(130,60,22);
				color: rgb(255, 255, 255);
				font: 12pt \"Segoe Print\";
				border-radius: 11px;
				border:none;
				border-left: 1px solid rgb(140,65,23);
				border-right: 1px solid rgb(140,65,23);
				border-bottom: 3px solid rgb(140,65,23);
			}
		'''
		self.init()
		self.opcionActiva = opcion
		self.botones_opciones_t2[opcion].setStyleSheet(style)
		# print(self.opcionActiva)

	# Ver resultados
	def ventanaResultados(self,IG7_Test):
		style = '''
			QMessageBox{
				font: 13pt \"Segoe Print\";
				background-color: rgb(250, 215, 160);
				color: rgb(156, 100, 12);
			}
			QPushButton{
				color: rgb(255, 255, 255);
			    background-color: rgb(156, 100, 12);
			    font: 12pt \"Segoe Print\";
			    border-radius: 11px;
			    border:none;
			    border-left: 1px solid rgb(156, 100, 12);
			    border-right: 1px solid rgb(156, 100, 12);
			    border-bottom: 3px solid rgb(156, 100, 12);
			}
			QPushButton:hover{
			    background-color: rgb(248, 196, 113);
			    border-left: 1px solid rgb(248, 196, 113);
			    border-right: 1px solid rgb(248, 196, 113);
			    border-bottom: 3px solid rgb(248, 196, 113);
			}
			QPushButton:pressed{
			    background-color: rgb(120, 66, 18);
			    border-left: 1px solid  rgb(120, 66, 18);
			    border-right: 1px solid  rgb(120, 66, 18);
			    border-top: 3px solid  rgb(120, 66, 18);
			    border-bottom: none;
			}
		'''
		msgBox = QMessageBox()
		msgBox.setWindowTitle("Resultado")

		calif = round((self.cuestionario.verResultado() * 10) / self.cuestionario.MAXPREGUNTAS, 2)
		if(calif >= 8):
			titulo = "FELIDADES"
		elif(calif >= 6):
			titulo = "BUEN TRABAJO"
		else:
			titulo = "SIGUE PRACTICANDO"
		mensaje = f"Tu resultado es: {self.cuestionario.verResultado()}/{self.cuestionario.MAXPREGUNTAS}\t\n\tCalificación: {calif}"
		msgBox.setText(titulo)
		msgBox.setInformativeText(mensaje)
		button_respuetas = msgBox.addButton('Ver respuestas', QMessageBox.YesRole)
		button_regresar = msgBox.addButton('Menú de práctica', QMessageBox.NoRole)
		msgBox.setStyleSheet(style)
		ret = msgBox.exec()
		if ret == 0:
			self.verRespuestas(IG7_Test)
			# self.abrirIG6(IG7_Test)
		if ret == 1:
			self.abrirIG6(IG7_Test)

	def abrirIG6(self,IG7):
		IG7.hide()
		self.IG6 = QtWidgets.QWidget()
		ui = G6.Ui_IG6_SeccionPractica()
		ui.setupUi(self.IG6)
		ui.setIDUsuario(self.id_usuario)
		self.IG6.show()

	# Ver respuestas
	def verRespuestas(self,IG7):
		self.numPregunta = 0
		self.ocultarBotones()
		self.desactivarBotones()
		self.boton_siguiente.clicked.connect(lambda: self.siguienteRespuesta(IG7))

		self.initRespuesta()
		self.mostraPyR(IG7)

	def desactivarBotones(self):
		for i in range(3):
			self.botones_opciones_t1[i].disconnect()
			self.botones_opciones_t2[i].disconnect()
			self.botones_opciones_t1[i].clicked.connect(lambda: self.desconectarBotones())
			self.botones_opciones_t2[i].clicked.connect(lambda: self.desconectarBotones())
		self.boton_siguiente.disconnect()

	def mostraPyR(self,IG7_Test):
		if self.cuestionario.preguntas[self.numPregunta][0].tipo_sena == 0:	# Seña estatica
			sena = self.cuestionario.solucion[self.numPregunta]
			self.label_instruccion.setText("Selecciona la imagen correspondiente a la seña: " + sena.nombre_sena)
			for i in range(3):
				self.botones_opciones_t1[i].setVisible(True)
				self.imagenBoton(self.numPregunta)
				self.pintarRespuesta_t1()
		else: 															# Seña dinámica
			self.label_instruccion.setText("¿A cuál seña corresponde el video?")
			for i in range(3):
				self.botones_opciones_t2[i].setVisible(True)
			self.textoBotones()
			self.pintarRespuesta_t2()
			self.widgetVideoTutorial.setVisible(True)
			self.setupVideo(IG7_Test)

	def initRespuesta(self):
		# Botones T1
		style = '''
			QPushButton{
				border: none;
				border-radius: 5px;
			}
		'''
		for i in range(3):
			self.botones_opciones_t1[i].setStyleSheet(style)

		# Botones T2
		style = '''
			QPushButton{
				color: rgb(255, 255, 255);
			    background-color: rgb(156, 100, 12);
			    font: 12pt \"Segoe Print\";
			    border-radius: 11px;
			    border:none;
			    border-left: 1px solid rgb(156, 100, 12);
			    border-right: 1px solid rgb(156, 100, 12);
			    border-bottom: 3px solid rgb(156, 100, 12);
			}
		'''
		for i in range(3):
			self.botones_opciones_t2[i].setStyleSheet(style)

	def pintarRespuesta_t1(self):
		styleCorrecto = '''
			QPushButton{
				border-radius: 5px;
				border: 3px solid  rgb(63,198,0);
			}
		'''
		styleIncorrecto = '''
			QPushButton{
				border-radius: 5px;
				border: 3px solid  rgb(250,0,0);
			}
		'''
		for i in range(3):
			if self.cuestionario.preguntas[self.numPregunta][i].id_sena == self.cuestionario.solucion[self.numPregunta].id_sena:
				self.botones_opciones_t1[i].setStyleSheet(styleCorrecto)
			elif self.cuestionario.preguntas[self.numPregunta][i].id_sena == self.cuestionario.respuestas[self.numPregunta].id_sena:
				if self.cuestionario.respuestas[self.numPregunta].id_sena != self.cuestionario.solucion[self.numPregunta].id_sena:
					self.botones_opciones_t1[i].setStyleSheet(styleIncorrecto)

	def pintarRespuesta_t2(self):
		styleIncorrecto = '''
			QPushButton{
				color: rgb(255, 255, 255);
				background-color: rgb(250,0,0);
				font: 12pt \"Segoe Print\";
				border-radius: 11px;
				border:none;
				border-left: 1px solid rgb(143,7,7);
				border-right: 1px solid rgb(143,7,7);
				border-bottom: 3px solid rgb(143,7,7);
			}
		'''
		styleCorrecto = '''
			QPushButton{
				color: rgb(255, 255, 255);
				background-color: rgb(17,130,75);
				font: 12pt \"Segoe Print\";
				border-radius: 11px;
				border:none;
				border-left: 1px solid rgb(15,92,55);
				border-right: 1px solid rgb(15,92,55);
				border-bottom: 3px solid rgb(15,92,55);
			}
		'''
		for i in range(3):
			if self.cuestionario.preguntas[self.numPregunta][i].id_sena == self.cuestionario.solucion[self.numPregunta].id_sena:
				self.botones_opciones_t2[i].setStyleSheet(styleCorrecto)
			elif self.cuestionario.preguntas[self.numPregunta][i].id_sena == self.cuestionario.respuestas[self.numPregunta].id_sena:
				if self.cuestionario.respuestas[self.numPregunta].id_sena != self.cuestionario.solucion[self.numPregunta].id_sena:
					self.botones_opciones_t2[i].setStyleSheet(styleIncorrecto)

	def siguienteRespuesta(self,IG7_Test):
		if self.numPregunta < self.cuestionario.MAXPREGUNTAS:
			self.numPregunta += 1
			if not self.numPregunta == self.cuestionario.MAXPREGUNTAS:
				self.init()
				self.ocultarBotones()
				self.mostraPyR(IG7_Test)
			else:
				# print(self.cuestionario.solucion)
				# print(self.cuestionario.respuestas)
				# print(self.cuestionario.verResultado())
				self.ventanaResultados(IG7_Test)

	def desconectarBotones(self):
		pass

if __name__ == "__main__":
	import sys
	import os
	app = QtWidgets.QApplication(sys.argv)
	IG7_test = QtWidgets.QWidget()
	ui = Ui_IG7_test()

	cuestionario = Practica()
	path = os.path.dirname(os.path.abspath(__file__)).replace("\\","/") + "/Clases/senas.db"
	cuestionario.setBD(path)
	cuestionario.id_categoria = 4
	cuestionario.crearPreguntas()

	ui.setCuestionario(cuestionario)

	ui.setIDUsuario(1)
	ui.setupUi(IG7_test)
	IG7_test.show()
	sys.exit(app.exec_())
